<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>debian手动编译安装python3.7</title>
    <url>/2020/02/17/debian%E6%89%8B%E5%8A%A8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85python3-7/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>之前阿里云搞学生活动，撸了台免费的2核4g的服务器，想着要用上，就开始折腾起来了。</p>
<p>于是就想着写一个网易云热评的爬虫，以后可能会做个博客插件，自动显示抓取到的热评。在本地其实写完爬虫了，但是用的是python3.7，服务器用的还是3.5的版本，于是就有了这篇博文</p>
<a id="more"></a>

<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><pre><code>注：以下命令都是在root用户下操作，若普通用户操作请自行加上 sudo </code></pre><ol>
<li><p>首先是卸载本地的python3.5版本的python</p>
<blockquote>
<p>apt autoremove python3</p>
</blockquote>
</li>
<li><p>安装编译环境</p>
<blockquote>
<p>apt-get install -y make build-essential gcc libffi-dev libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev</p>
</blockquote>
</li>
<li><p>下载需要的python版本的安装包（我比较喜欢将下载下来的文件单独放在一个文件夹里）</p>
<blockquote>
<p>mkdir ~/python3.7<br>cd ~/python3.7<br>wget <a href="https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz</a></p>
</blockquote>
</li>
<li><p>解压文件</p>
<blockquote>
<p>tar -xvf Python-3.7.6.tar.xz</p>
</blockquote>
</li>
<li><p>编译 安装 pyhon</p>
<blockquote>
<p>cd Python-3.7.6<br>./configure –prefix=/usr/local/python3/ –enable-optimizations<br>make &amp;&amp; make install</p>
</blockquote>
</li>
<li><p>软链接python</p>
<blockquote>
<p>ln -s /usr/local/python3/bin/python3.7 /usr/bin/python3<br>ln -s /usr/local/python3/bin/pip3.7 /usr/bin/pip3</p>
</blockquote>
</li>
<li><p>安装完成（可以通过以下命令查看是否安装成功）</p>
<blockquote>
<p>python3 -V<br>pip3 -V</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo部署踩坑记</title>
    <url>/2020/01/20/hexo%E9%83%A8%E7%BD%B2%E8%B8%A9%E5%9D%91%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>Hexo本地预览没有一点问题，但是就是推送不上git，报错如下</p>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120152027.png" alt="报错详情">\</p>
<a id="more"></a>

<p>推测原因：肯定是在部署的过程中出现的问题，而且很大可能本地缺少某个文件造成的</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1.设置Git的username</p>
<blockquote>
<p>git config –global user.name “yourname”</p>
</blockquote>
<p>2.设置Git的email</p>
<blockquote>
<p>git config –global user.email “youremail”</p>
</blockquote>
<p>3.生成秘钥</p>
<blockquote>
<p>ssh-keygen -t rsa -C “youremail”</p>
</blockquote>
<p>会提示输入密码一类的东西，都回车就行</p>
<p>然后会生成 id_rsa文件 和 id_rsa.pub文件</p>
<p>最后GitHub上添加ssh秘钥，也就是id_rsa.pub里的秘钥</p>
<p>问题解决</p>
<h2 id="实际原因"><a href="#实际原因" class="headerlink" title="实际原因"></a>实际原因</h2><p>由于平常会进行一些直接用Windows的cmd进行ssh连接，所以之前把这个秘钥给误删了，但是生成这个秘钥后就不能正常的使用cmd进行ssh连接了，所以ssh连接还是用PUTTY吧</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu单用户模式</title>
    <url>/2020/01/20/ubuntu%E5%8D%95%E7%94%A8%E6%88%B7%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>虚拟机内误操作，导致无法切换root用户，原因为：用户权限过低，无法切换。（我TM完全不晓得我完成了什么操蛋操作！！我不准我访问我自己？！？）</p>
<a id="more"></a>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="解决问题思路"><a href="#解决问题思路" class="headerlink" title="解决问题思路"></a>解决问题思路</h3><p>进入Ubuntu单用户模式[类似window的安全模式]，更改用户权限。（我是直接将权限提升为0，即root权限。不建议提权提得太高，不然误操作的损失会非常大。）</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-重启系统，在启动时长按shift键，进入grub菜单"><a href="#1-重启系统，在启动时长按shift键，进入grub菜单" class="headerlink" title="1.重启系统，在启动时长按shift键，进入grub菜单"></a>1.重启系统，在启动时长按shift键，进入grub菜单</h4><p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120121104.png" alt="grub菜单"></p>
<h4 id="2-按“e”编辑启动项"><a href="#2-按“e”编辑启动项" class="headerlink" title="2.按“e”编辑启动项"></a>2.按“e”编辑启动项</h4><p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120121207.png" alt="启动项编辑"></p>
<h4 id="3-修改Linux行"><a href="#3-修改Linux行" class="headerlink" title="3.修改Linux行"></a>3.修改Linux行</h4><p>修改前：</p>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120113340.png" alt="修改前"></p>
<p>修改后：</p>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120113502.png" alt="修改后"></p>
<h4 id="4-保存并重启进入单用户模式"><a href="#4-保存并重启进入单用户模式" class="headerlink" title="4.保存并重启进入单用户模式"></a>4.保存并重启进入单用户模式</h4><p>修改完成后按ctrl+x或F10保存修改并重启就会进入单用户模式。</p>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120121414.webp" alt="单用户模式"></p>
<h4 id="5-找到权限管理文件并提权-图片为已经进入系统后补上的"><a href="#5-找到权限管理文件并提权-图片为已经进入系统后补上的" class="headerlink" title="5.找到权限管理文件并提权(图片为已经进入系统后补上的)"></a>5.找到权限管理文件并提权(图片为已经进入系统后补上的)</h4><p>输入以下命令编辑权限文件</p>
<blockquote>
<p>vim /etc/passwd</p>
</blockquote>
<p>如果没有安装vim可用以下命令</p>
<blockquote>
<p>vi /etc/passwd</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200120114815.png" alt="权限文件"></p>
<h4 id="6-单用户模式说明"><a href="#6-单用户模式说明" class="headerlink" title="6.单用户模式说明"></a>6.单用户模式说明</h4><p>reboot  init 0  shutdown -c等命令在单用户模式不会起作用，所以要用ctrl + alt + delete来重启</p>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>在Linux系统忘记登陆密码的时候也可以用这种方法进入单用户模式，直接输入以下命令进行密码修改</p>
<blockquote>
<p>passwd 要修改密码的用户的用户名</p>
</blockquote>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/zhangmingcheng/articles/8213819.html" target="_blank" rel="noopener">参考链接1</a></p>
<p><a href="https://www.jianshu.com/p/c17f29a404e8" target="_blank" rel="noopener">参考链接2</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>debian处理软件包出错方法</title>
    <url>/2020/01/19/debian%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%87%BA%E9%94%99%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h2><p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20200119192106.png" alt="问题图片"></p>
<a id="more"></a>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><strong>注：以下命令皆在root用户下执行</strong></br></p>
<h3 id="1-进入目标目录"><a href="#1-进入目标目录" class="headerlink" title="1.进入目标目录"></a>1.进入目标目录</h3><blockquote>
<p>cd /var/lib/dpkg</p>
</blockquote>
<h3 id="2-重命名目标目录中的info文件夹"><a href="#2-重命名目标目录中的info文件夹" class="headerlink" title="2.重命名目标目录中的info文件夹"></a>2.重命名目标目录中的info文件夹</h3><blockquote>
<p>mv info info.bak</p>
</blockquote>
<h3 id="3-创建一个新的info文件夹"><a href="#3-创建一个新的info文件夹" class="headerlink" title="3.创建一个新的info文件夹"></a>3.创建一个新的info文件夹</h3><blockquote>
<p>mkdir info</p>
</blockquote>
<h3 id="4-执行更新操作"><a href="#4-执行更新操作" class="headerlink" title="4.执行更新操作"></a>4.执行更新操作</h3><blockquote>
<p>apt-get update &amp;&amp; apt-get -f install</p>
</blockquote>
<h3 id="5-将更新产生的文件移动到创建的info-bak文件下"><a href="#5-将更新产生的文件移动到创建的info-bak文件下" class="headerlink" title="5.将更新产生的文件移动到创建的info.bak文件下"></a>5.将更新产生的文件移动到创建的info.bak文件下</h3><blockquote>
<p>mv info/* info.bak</p>
</blockquote>
<h3 id="6-删除创建的info文件夹"><a href="#6-删除创建的info文件夹" class="headerlink" title="6.删除创建的info文件夹"></a>6.删除创建的info文件夹</h3><blockquote>
<p>rm -rf info</p>
</blockquote>
<h3 id="7-将info-bak重命名回info"><a href="#7-将info-bak重命名回info" class="headerlink" title="7.将info.bak重命名回info"></a>7.将info.bak重命名回info</h3><blockquote>
<p>mv info.bak info</p>
</blockquote>
<h3 id="8-再次执行更新"><a href="#8-再次执行更新" class="headerlink" title="8.再次执行更新"></a>8.再次执行更新</h3><blockquote>
<p>apt-get update &amp;&amp; apt-get -f install</p>
</blockquote>
<h2 id="解决方法来源"><a href="#解决方法来源" class="headerlink" title="解决方法来源"></a>解决方法来源</h2><p>解决方法来自以下博客：<a href="https://www.qingsword.com/qing/ubuntu-dpkg-configure-error.html" target="_blank" rel="noopener">链接</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos通过yum安装nginx</title>
    <url>/2020/01/19/centos%E9%80%9A%E8%BF%87yum%E5%AE%89%E8%A3%85nginx/</url>
    <content><![CDATA[<h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><p><strong>注：以下命令都在root用户下使用，若不使用root用户，可在每一个yum之前加上sudo即可</strong></br><br>安装依赖</p>
<blockquote>
<p>yum install yum-utils</p>
</blockquote>
<a id="more"></a>

<h2 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h2><p>新建nginx源的文件</p>
<blockquote>
<p>vi /etc/yum.repos.d/nginx.repo</p>
</blockquote>
<p>输入以下内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">[nginx-stable]</span></span><br><span class="line"><span class="attr">name</span>=nginx stable repo</span><br><span class="line"><span class="attr">baseurl</span>=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"><span class="section">[nginx-mainline]</span></span><br><span class="line"><span class="attr">name</span>=nginx mainline repo</span><br><span class="line"><span class="attr">baseurl</span>=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">gpgkey</span>=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure>

<p>并保存（如果不会使用vi编辑，教程在这里:<a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">菜鸟教程</a>）</p>
<h2 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h2><blockquote>
<p>yum update</p>
</blockquote>
<h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><blockquote>
<p>yum install nginx</p>
</blockquote>
]]></content>
      <categories>
        <category>软件安装教程</category>
      </categories>
      <tags>
        <tag>软件安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx安装流程</title>
    <url>/2019/12/08/nginx%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>   我使用的是Centos7</p>
<p><img src="https://raw.githubusercontent.com/Maybehard/image/master/20191208232351.png" alt="Centos7"></p>
<a id="more"></a>

<h2 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h2><h3 id="安装PCRE"><a href="#安装PCRE" class="headerlink" title="安装PCRE"></a>安装PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。（我暂时还晓不得这是啥）</p>
<p>1.下载地址为<a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz" target="_blank" rel="noopener">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></p>
<p>下载命令为： <code>wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</code></p>
<p>2.解压文件</p>
<p>命令为： <code>tar zxvf pcre-8.35.tar.gz</code><br><img src="https://raw.githubusercontent.com/Maybehard/image/master/20191208235200.png" alt="已解压的文件"><br>3.进入已解压的文件目录</p>
<p>命令为： <code>cd pcre-8.35</code><br><img src="https://raw.githubusercontent.com/Maybehard/image/master/20191208235043.png" alt="进入目录"></p>
<p>4.编译安装</p>
<p>命令为：</p>
<p><code>./configure</code><br><code>make &amp;&amp; make install</code></p>
<p>5.查看pcre版本（确认安装无误）<br>命令为：<code>pcre-config --version</code></p>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>1.下载地址为：<a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/install/" target="_blank" rel="noopener">https://www.nginx.com/resources/wiki/start/topics/tutorials/install/</a></p>
<p>下载命令为： <code>wget 要下载的nginx版本</code></p>
<p>2.解压文件</p>
<p>命令为： <code>tar zxvf 下载的文件名</code></p>
<p>3.进入已解压的文件目录</p>
<p>命令为： <code>cd 解压好文件的文件名</code></p>
<p>4.编译安装</p>
<p>命令为：</p>
<p><code>./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35</code></p>
<p><code>./configure</code></p>
<p><code>make &amp;&amp; make install</code></p>
<p>5.查看nginx版本（确认安装无误）</p>
<p>命令为：<code>/usr/local/webserver/nginx/sbin/nginx -v</code></p>
<p>(如果出错的话可以试试/usr/local/nginx/sbin/nginx -v)</p>
<p>至此 nginx安装完成，后面的配置下次再添加</p>
]]></content>
      <categories>
        <category>软件安装教程</category>
      </categories>
      <tags>
        <tag>软件安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title>网页更新日志</title>
    <url>/2018/10/13/%E7%BD%91%E9%A1%B5%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h2 id="2020-2-17更新日志"><a href="#2020-2-17更新日志" class="headerlink" title="2020.2.17更新日志"></a>2020.2.17更新日志</h2><ol>
<li>将心迹系列博文收归本地</li>
<li>将资源分享博文收归本地</li>
<li>新增博文《debian手动编译安装python3.7》</li>
</ol>
<h2 id="2020-2-11更新日志"><a href="#2020-2-11更新日志" class="headerlink" title="2020.2.11更新日志"></a>2020.2.11更新日志</h2><ol>
<li>主题更改</li>
<li>新增博文《心迹（二）》</li>
<li>将原博文《心迹》更改为《心迹（一）》</li>
</ol>
<h2 id="2020-1-22更新日志"><a href="#2020-1-22更新日志" class="headerlink" title="2020.1.22更新日志"></a>2020.1.22更新日志</h2><ol>
<li>新增博文《Hexo部署踩坑记》</li>
<li>由于原地址出现问问题，新开了一个GitHub账号：<a href="https://github.com/come-down" target="_blank" rel="noopener">https://github.com/come-down</a></li>
</ol>
<h2 id="2020-1-20更新日志"><a href="#2020-1-20更新日志" class="headerlink" title="2020.1.20更新日志"></a>2020.1.20更新日志</h2><ol>
<li>整理资料后新增博文《Ubuntu单用户模式》</li>
</ol>
<a id="more"></a>

<h2 id="2020-1-19更新日志"><a href="#2020-1-19更新日志" class="headerlink" title="2020.1.19更新日志"></a>2020.1.19更新日志</h2><ol>
<li>新增博文：《centos通过yum安装nginx》与《debian处理软件包出错方法》</li>
<li>更改博客主题为fluid（对效果不是很满意）</li>
<li>新增分类：Linux</li>
</ol>
<h2 id="2019-12-8更新日志"><a href="#2019-12-8更新日志" class="headerlink" title="2019.12.8更新日志"></a>2019.12.8更新日志</h2><ol>
<li>新增博文：《nginx安装流程》</li>
<li>新增分类：软件安装教程</li>
</ol>
<h2 id="2019-10-5更新日志"><a href="#2019-10-5更新日志" class="headerlink" title="2019.10.5更新日志"></a>2019.10.5更新日志</h2><ol>
<li>《爱在黎明破晓前》观后感留存本地</li>
</ol>
<h2 id="2019-9-14更新日志"><a href="#2019-9-14更新日志" class="headerlink" title="2019.9.14更新日志"></a>2019.9.14更新日志</h2><ol>
<li>增加博文：《爱在黎明破晓前》观后感</li>
<li>准备增设软件推荐的博文及分类（已放入清单，暂时忙不过来，后面会加。）</li>
</ol>
<h2 id="2019-9-13更新日志"><a href="#2019-9-13更新日志" class="headerlink" title="2019.9.13更新日志"></a>2019.9.13更新日志</h2><ol>
<li>把除了更新日志和资源更新外的博文都留存为本地了（目录为blog/旧博文）</li>
<li>添加心迹标签与分类，用以存放一些些所感所悟</li>
<li>使用picgo+GitHub作为图床（教程链接：<a href="https://blog.csdn.net/yefcion/article/details/88412025）" target="_blank" rel="noopener">https://blog.csdn.net/yefcion/article/details/88412025）</a></li>
</ol>
<h2 id="2019-2-4更新日志及1-30更新未加更新日志的说明"><a href="#2019-2-4更新日志及1-30更新未加更新日志的说明" class="headerlink" title="2019.2.4更新日志及1.30更新未加更新日志的说明"></a>2019.2.4更新日志及1.30更新未加更新日志的说明</h2><ol>
<li>因原页面bug修复不过来，所以重新搭建了一个，主题改为古风</li>
<li>加入了网易云歌单（还没有测试能不能正常播放）</li>
<li>VScode汉化教程暂时未补全</li>
<li>发布了deepin初体验的博文，开始以Linux作为日常折腾的系统</li>
<li>修改了一下下不一样的世界这篇博文，但是由于比较敏感就没补全了，有兴趣的阔以面对面聊呢。</li>
</ol>
<h2 id="2018-10-13更新日志"><a href="#2018-10-13更新日志" class="headerlink" title="2018.10.13更新日志"></a>2018.10.13更新日志</h2><ol>
<li>完善标签，分类页面</li>
<li>添加RSS订阅</li>
<li>在右上角或者左上角实现fork me on github</li>
<li>修改底部标签样式</li>
<li>增加头像旋转特效</li>
</ol>
]]></content>
      <categories>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>更新日志</tag>
      </tags>
  </entry>
</search>
